
# Steps taken to analyse Cyclist Capstone Project
(This analysis is based on the Divvy case study "'Sophisticated, Clear, and Polishedâ€™: Divvy and Data Visualization" written by Kevin Hartman)

# 1. Collect data
Dowload datasets from:
https://divvy-tripdata.s3.amazonaws.com/index.html
Save the dataset into "C:/Users/Admin/Desktop/Divvy-Datatrip-12-months"

Import Datasets (12months) into RStudio as CSV files by names x202112, x202201, x202202, x202203, x202204, x202205, x202206, x202207, x202208, x202209, x202210, x202211

```{r}
library(readr)
X202112 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202112-divvy-tripdata.csv")
X202201 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202201-divvy-tripdata.csv")
X202202 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202202-divvy-tripdata.csv")
X202203 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202203-divvy-tripdata.csv")
X202204 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202204-divvy-tripdata.csv")
X202205 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202205-divvy-tripdata.csv")
X202206 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202206-divvy-tripdata.csv")
X202207 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202207-divvy-tripdata.csv")
X202208 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202208-divvy-tripdata.csv")
X202209 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202209-divvy-publictripdata.csv")
X202210 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202210-divvy-tripdata.csv")
X202211 <- read_csv("C:/Users/Admin/Desktop/Divvy-Datatrip-12-months/202211-divvy-tripdata.csv")
```

# 2. Wrangle Data and combine into 1 single data frame

-   Check if all columns in each dataset fit together in Environment
    pane
-   Combine by bind_row() -- dplyr package


```{r}
library(dplyr)
data_trip <- bind_rows(X202112,X202201,X202202,X202203,X202204,X202205,X202206,X202207,X202208,X202209,X202210,X202211)
```

# 3. Clean up and add data to prepare for analyzing

-   Add columns that list the date, month, day, and trip duration of
    each ride

```{r}
 data_trip <- mutate(data_trip, date = as.Date(data_trip$started_at), weekday = weekdays(data_trip$started_at, FALSE), month = months(data_trip$started_at, FALSE), ride_length = as.numeric(data_trip$ended_at - data_trip$started_at))
```

-   Remove bad data: By summary(), ride_length show lot of negative
    results. Check with sum()

```{r}
sum(data_trip$ride_length <0)
```

These rows need to be removed.

Doing that need to create new dataframe: data_trip_v2

```{r}
data_trip_v2 <- data_trip[!(data_trip$ride_length <0),]
```

# 4. Conduct analyses

-   Descriptive analysis on ride_length (all figures in seconds)

```{r}
mean(data_trip_v2$ride_length) #straight average (total ride length / rides)
```

```{r}
median(data_trip_v2$ride_length) #midpoint number in the ascending array of ride lengths
```

```{r}
max(data_trip_v2$ride_length) #longest ride
```

```{r}
min(data_trip_v2$ride_length) #shortest ride
```

-   Summary on ride length

```{r}
summary(data_trip_v2$ride_length)
```

-   Aggregate on ride length between 2 kinds of customer: casual and
    member

```{r}
aggregate(data_trip_v2$ride_length ~ data_trip_v2$member_casual, FUN = mean)
```

```{r}
aggregate(data_trip_v2$ride_length ~ data_trip_v2$member_casual, FUN = median)
```

```{r}
aggregate(data_trip_v2$ride_length ~ data_trip_v2$member_casual, FUN = max)
```

```{r}
aggregate(data_trip_v2$ride_length ~ data_trip_v2$member_casual, FUN = min)
```

-   See the average ride time by each day for members vs casual users

```{r}
aggregate(data_trip_v2$ride_length ~ data_trip_v2$member_casual + data_trip_v2$weekday, FUN = mean)
```

\*\* Notice that weekdays are out of order. Let's fix that

```{r}
data_trip_v2$weekday <- ordered(data_trip_v2$weekday, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
```

-   Run again the function to see the average ride time by each day for
    members vs casual users

```{r}
aggregate(data_trip_v2$ride_length ~ data_trip_v2$member_casual + data_trip_v2$weekday, FUN = mean)
```

\*analyze ridership by type and weekday

```{r}
data_trip_v2 %>% 
  group_by(member_casual,weekday) %>% 
  summarise(number_of_rides = n(), average_duration = mean(ride_length)) %>% 
  arrange(member_casual,weekday)
```

#Visualization

\*Number of rides by rider type
```{r}
library(ggplot2)
```

```{r}
data_trip_v2 %>% 
  group_by(member_casual,weekday) %>% 
  summarise(number_of_rides = n(), average_duration = mean(ride_length)) %>% 
  arrange(member_casual,weekday) %>% 
  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge")
```

-   Average duration

```{r}
data_trip_v2 %>% 
  group_by(member_casual,weekday) %>% 
  summarise(number_of_rides = n(), average_duration = mean(ride_length)) %>% 
  arrange(member_casual,weekday) %>% 
  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge")
```
